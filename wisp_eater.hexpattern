#def(consume_wisp)(@pattern(WEST,wqwwwqwdwawqwawdwqwwwqwdwawqwawewddedqweaaqeeeeeadq))

// Spell for wisp to run
{
    Muninn's Reflection
    Nullary Reflection
    Equality Distillation
    // Ravenmind null case
    {
        // Remove reference to self from stack
        Bookkeeper's Gambit(v)

        // Pattern List
        {
            $consume_wisp
        }
        // Get list of wandering wisps
        { @entity_type(hexal:wisp/wandering) } >>
        Identity Reflection
        Compass' Purification
        Numerical Reflection(15)
        Zone Exaltation: Type

        // Thoth's to eat all wandering wisps
        Thoth's Gambit

        // Push empty list to ravenmind
        Vacant Reflection
        Huginn's Gambit
    }
    // Ravenmind populated case
    {
        //START: Add new wisps to ravenmind list
            //  Pattern List
            {
                Flock's Disintegration // entity, time
                Bookkeeper's Gambit(v)
            }
            // Get ravenmind list
            Muninn's Reflection
            // Thoth's to get all entity refs from ravenmind pairs and add them to a list
            Thoth's Gambit

            // Stack: tracked_entity_list

            // Pattern List
            {
                // Stack: tracked_entity_list, entity
                Gemini Decomposition // list, entity, entity
                Numerical Reflection(3)
                Fisherman's Gambit // entity, entity, list

                // return true if entity in list
                Gemini Decomposition
                Abacus Purification // Stack: any, list, list_len
                Jester's Gambit
                Numerical Reflection(3)
                Fisherman's Gambit // Stack: list_len, list, any
                Integration Distillation
                Uniqueness Purification
                Abacus Purification // Stack: list_len, new_list_len
                Equality Distillation // Stack: entity, bool
                Reveal
                
                // entity is in list case
                {
                    // Stack: entity
                    Bookkeeper's Gambit(v)
                }
                // entity not in list case
                {
                    // Stack: entity
                    Timekeeper's Reflection // entity, time
                    Numerical Reflection(2)
                    Flock's Gambit // [entity, time]

                    Muninn's Reflection // list, [list, list, ...]
                    Jester's Gambit // [list, list, ...], list
                    Integration Distillation
                    Huginn's Gambit // Update ravenmind with new entry
                }
                Augur's Exaltation
                Hermes' Gambit
            }
            // Get list of wandering wisps
            { @entity_type(hexal:wisp/wandering) } >>
            Identity Reflection
            Compass' Purification
            Numerical Reflection(15)
            Zone Exaltation: Type

            // Thoth's
            Thoth's Gambit
            Bookkeeper's Gambit(v)

        //START: Check age of all wisps in ravenmind list and consume ones that are old enough
            // Pattern List
            {
                // Stack: [entity, time]
                Gemini Decomposition // [entity, time], [entity, time]
                Flock's Disintegration // [entity, time], entity, time
                Bookkeeper's Gambit(-v-) // [entity, time], time
                Timekeeper's Reflection // [entity, time], time, current_time
                Jester's Gambit // [entity, time], current_time, time
                Subtractive Distillation // [entity, time], delta
                Numerical Reflection(250) // [entity, time], delta, num
                Maximus Distillation // [entity, time], bool

                // Delta greater than val case
                {
                    // Stack: [entity, time]
                    Flock's Disintegration // entity, time
                    Bookkeeper's Gambit(v) // entity
                    $consume_wisp
                }
                // Delta lesser than val case
                {
                    // Stack: [entity, time]
                    Muninn's Reflection
                    Jester's Gambit
                    Integration Distillation
                    // Add item to ravenmind list
                    Huginn's Gambit
                }
                Augur's Exaltation
                Hermes' Gambit
            }
            // Get ravenmind list
            Muninn's Reflection // list

            // Push empty list to ravenmind
            Vacant Reflection
            Huginn's Gambit

            // Thoth's
            Thoth's Gambit
            Bookkeeper's Gambit(v)
    }
    Augur's Exaltation
    Hermes' Gambit

    // Delay
    Numerical Reflection(10)
    Delay Wisp
}

// Vec for wisp to spawn at
Mind's Reflection
Compass' Purification
Mind's Reflection
Alidade's Purification
Archer's Distillation
Mind's Reflection
Compass' Purification
Mind's Reflection
Alidade's Purification
Architect's Distillation
Additive Distillation

// Amount of media for wisp
Numerical Reflection(128)

Summon Cyclic Wisp