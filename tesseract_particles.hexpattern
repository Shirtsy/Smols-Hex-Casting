#def(tess1)(
{
    [@vec(1.031,-0.696,-0.944), @vec(2.498,-2.457,-2.418), @vec(-2.455,-2.459,-2.415), @vec(-0.969,-0.696,-0.944), @vec(1.031,-0.696,-0.944), @vec(1.298,1.276,-1.209), @vec(-1.240,1.280,-1.208), @vec(-0.969,-0.696,-0.944), @vec(-0.969,-0.683,1.056), @vec(1.031,-0.687,1.056), @vec(1.031,-0.696,-0.944)],
    [@vec(-1.240,1.280,-1.208), @vec(-2.705,1.920,-2.680), @vec(-2.455,-2.459,-2.415), @vec(-2.436,-2.457,2.525), @vec(2.500,-2.442,2.527), @vec(2.498,-2.457,-2.418), @vec(2.766,1.922,-2.680), @vec(-2.705,1.920,-2.680), @vec(-2.705,1.926,2.792), @vec(-2.436,-2.457,2.525), @vec(-0.969,-0.683,1.056), @vec(-1.228,1.282,1.321), @vec(-1.240,1.280,-1.208)],
    [@vec(1.298,1.276,-1.209), @vec(2.766,1.922,-2.680), @vec(2.766,1.922,2.792), @vec(2.500,-2.442,2.527), @vec(1.031,-0.687,1.056), @vec(1.291,1.282,1.322), @vec(1.298,1.276,-1.209)],
    [@vec(-1.228,1.282,1.321), @vec(-2.705,1.926,2.792), @vec(2.766,1.922,2.792), @vec(1.291,1.282,1.322), @vec(-1.228,1.282,1.321)]
}
)
#def(tess2)(
{
    [@vec(1.034,-0.367,-0.944), @vec(2.203,-2.157,-2.128), @vec(-2.175,-2.160,-2.121), @vec(-0.966,-0.367,-0.944), @vec(1.034,-0.367,-0.944), @vec(1.597,1.575,-1.504), @vec(-1.537,1.584,-1.501), @vec(-0.966,-0.367,-0.944), @vec(-0.966,-0.338,1.056), @vec(1.034,-0.348,1.056), @vec(1.034,-0.367,-0.944)],
    [@vec(-1.537,1.584,-1.501), @vec(-2.702,1.005,-2.680), @vec(-2.175,-2.160,-2.121), @vec(-2.134,-2.157,2.228), @vec(2.206,-2.125,2.234), @vec(2.203,-2.157,-2.128), @vec(2.769,1.010,-2.680), @vec(-2.702,1.005,-2.680), @vec(-2.702,1.017,2.792), @vec(-2.134,-2.157,2.228), @vec(-0.966,-0.338,1.056), @vec(-1.512,1.588,1.615), @vec(-1.537,1.584,-1.501)],
    [@vec(1.597,1.575,-1.504), @vec(2.769,1.010,-2.680), @vec(2.769,1.010,2.792), @vec(2.206,-2.125,2.234), @vec(1.034,-0.348,1.056), @vec(1.583,1.588,1.619), @vec(1.597,1.575,-1.504)],
    [@vec(-1.512,1.588,1.615), @vec(-2.702,1.017,2.792), @vec(2.769,1.010,2.792), @vec(1.583,1.588,1.619), @vec(-1.512,1.588,1.615)]
}
)
#def(tess3)(
{
    [@vec(1.037,-0.038,-0.944), @vec(1.908,-1.856,-1.837), @vec(-1.895,-1.862,-1.827), @vec(-0.963,-0.038,-0.944), @vec(1.037,-0.038,-0.944), @vec(1.897,1.873,-1.798), @vec(-1.834,1.887,-1.794), @vec(-0.963,-0.038,-0.944), @vec(-0.963,0.006,1.056), @vec(1.037,-0.009,1.056), @vec(1.037,-0.038,-0.944)],
    [@vec(-1.834,1.887,-1.794), @vec(-2.699,0.090,-2.680), @vec(-1.895,-1.862,-1.827), @vec(-1.831,-1.856,1.931), @vec(1.913,-1.808,1.941), @vec(1.908,-1.856,-1.837), @vec(2.773,0.097,-2.680), @vec(-2.699,0.090,-2.680), @vec(-2.699,0.109,2.792), @vec(-1.831,-1.856,1.931), @vec(-0.963,0.006,1.056), @vec(-1.796,1.893,1.910), @vec(-1.834,1.887,-1.794)],
    [@vec(1.897,1.873,-1.798), @vec(2.773,0.097,-2.680), @vec(2.773,0.097,2.792), @vec(1.913,-1.808,1.941), @vec(1.037,-0.009,1.056), @vec(1.875,1.893,1.915), @vec(1.897,1.873,-1.798)],
    [@vec(-1.796,1.893,1.910), @vec(-2.699,0.109,2.792), @vec(2.773,0.097,2.792), @vec(1.875,1.893,1.915), @vec(-1.796,1.893,1.910)]
}
)
#def(tess4)(
{
    [@vec(1.040,0.291,-0.944), @vec(1.613,-1.555,-1.546), @vec(-1.615,-1.563,-1.532), @vec(-0.960,0.291,-0.944), @vec(1.040,0.291,-0.944), @vec(2.196,2.172,-2.093), @vec(-2.132,2.190,-2.087), @vec(-0.960,0.291,-0.944), @vec(-0.960,0.350,1.056), @vec(1.040,0.330,1.056), @vec(1.040,0.291,-0.944)],
    [@vec(-2.132,2.190,-2.087), @vec(-2.696,-0.825,-2.680), @vec(-1.615,-1.563,-1.532), @vec(-1.529,-1.555,1.635), @vec(1.620,-1.490,1.647), @vec(1.613,-1.555,-1.546), @vec(2.776,-0.815,-2.680), @vec(-2.696,-0.825,-2.680), @vec(-2.696,-0.800,2.792), @vec(-1.529,-1.555,1.635), @vec(-0.960,0.350,1.056), @vec(-2.081,2.198,2.204), @vec(-2.132,2.190,-2.087)],
    [@vec(2.196,2.172,-2.093), @vec(2.776,-0.815,-2.680), @vec(2.776,-0.815,2.792), @vec(1.620,-1.490,1.647), @vec(1.040,0.330,1.056), @vec(2.167,2.198,2.211), @vec(2.196,2.172,-2.093)],
    [@vec(-2.081,2.198,2.204), @vec(-2.696,-0.800,2.792), @vec(2.776,-0.815,2.792), @vec(2.167,2.198,2.211), @vec(-2.081,2.198,2.204)]
}
)
#def(tess5)(
{
    [@vec(1.043,0.619,-0.944), @vec(1.317,-1.254,-1.255), @vec(-1.335,-1.264,-1.238), @vec(-0.957,0.619,-0.944), @vec(1.043,0.619,-0.944), @vec(2.496,2.470,-2.387), @vec(-2.429,2.493,-2.380), @vec(-0.957,0.619,-0.944), @vec(-0.957,0.694,1.056), @vec(1.043,0.669,1.056), @vec(1.043,0.619,-0.944)],
    [@vec(-2.429,2.493,-2.380), @vec(-2.693,-1.740,-2.680), @vec(-1.335,-1.264,-1.238), @vec(-1.227,-1.254,1.338), @vec(1.326,-1.173,1.354), @vec(1.317,-1.254,-1.255), @vec(2.779,-1.727,-2.680), @vec(-2.693,-1.740,-2.680), @vec(-2.693,-1.708,2.792), @vec(-1.227,-1.254,1.338), @vec(-0.957,0.694,1.056), @vec(-2.365,2.503,2.498), @vec(-2.429,2.493,-2.380)],
    [@vec(2.496,2.470,-2.387), @vec(2.779,-1.727,-2.680), @vec(2.779,-1.728,2.792), @vec(1.326,-1.173,1.354), @vec(1.043,0.669,1.056), @vec(2.460,2.503,2.507), @vec(2.496,2.470,-2.387)],
    [@vec(-2.365,2.503,2.498), @vec(-2.693,-1.708,2.792), @vec(2.779,-1.728,2.792), @vec(2.460,2.503,2.507), @vec(-2.365,2.503,2.498)]
}
)
#def(tess6)(
{
    [@vec(1.046,0.948,-0.944), @vec(1.022,-0.953,-0.965), @vec(-1.055,-0.965,-0.944), @vec(-0.954,0.948,-0.944), @vec(1.046,0.948,-0.944), @vec(2.795,2.769,-2.681), @vec(-2.727,2.797,-2.673), @vec(-0.954,0.948,-0.944), @vec(-0.954,1.038,1.056), @vec(1.046,1.008,1.056), @vec(1.046,0.948,-0.944)],
    [@vec(-2.727,2.797,-2.673), @vec(-2.690,-2.655,-2.680), @vec(-1.055,-0.965,-0.944), @vec(-0.925,-0.954,1.041), @vec(1.033,-0.856,1.060), @vec(1.022,-0.953,-0.965), @vec(2.782,-2.640,-2.680), @vec(-2.690,-2.655,-2.680), @vec(-2.690,-2.617,2.792), @vec(-0.925,-0.954,1.041), @vec(-0.954,1.038,1.056), @vec(-2.649,2.809,2.793), @vec(-2.727,2.797,-2.673)],
    [@vec(2.795,2.769,-2.681), @vec(2.782,-2.640,-2.680), @vec(2.782,-2.640,2.792), @vec(1.033,-0.856,1.060), @vec(1.046,1.008,1.056), @vec(2.752,2.809,2.803), @vec(2.795,2.769,-2.681)],
    [@vec(-2.649,2.809,2.793), @vec(-2.690,-2.617,2.792), @vec(2.782,-2.640,2.792), @vec(2.752,2.809,2.803), @vec(-2.649,2.809,2.793)]
}
)

// ravenlist.initialize (num -> )
// Pushes a list to the Ravenmind containing the specified number of null iotas. 
#def(ravenlist.initialize)(
    Gemini Decomposition// num, num
    Huginn's Gambit // num | num
    {@null} >> // num, null | num
    Jester's Gambit // null, num | num
    Gemini Gambit // nulls.. | num
    Muninn's Reflection // nulls.., num | num
    Flock's Gambit // list | num
    Huginn's Gambit // _ | list
)

// ravenlist.write (num, any -> )
// Remove the top iota of the stack and the number at the top, then set the nth element of the ravenlist to that iota.
#def(ravenlist.write)(
    Muninn's Reflection // num, any, ravenlist
    Numerical Reflection(3)
    Fisherman's Gambit // any, ravenlist, num
    Numerical Reflection(3)
    Fisherman's Gambit // ravenlist, num, any
    Surgeon's Exaltation // ravenlist
    Huginn's Gambit
)

// ravenlist.read (num -> any)
// Remove the number at the top of the stack and push the nth element of the ravenlist to the stack.
#def(ravenlist.read)(
    Muninn's Reflection // num, ravenlist
    Jester's Gambit
    Selection Distillation
)

// Spell for wisp to run
{
    Muninn's Reflection
    {@null} >>
    Equality Distillation
    // ravenmind null case
    {
        Bookkeeper's Gambit(v)
        Numerical Reflection(7)
        $ravenlist.initialize

        Numerical Reflection(0)
        Numerical Reflection(1)
        $ravenlist.write

        Numerical Reflection(1)
        $tess1
        $ravenlist.write
        Numerical Reflection(2)
        $tess2
        $ravenlist.write
        Numerical Reflection(3)
        $tess3
        $ravenlist.write
        Numerical Reflection(4)
        $tess4
        $ravenlist.write
        Numerical Reflection(5)
        $tess5
        $ravenlist.write
        Numerical Reflection(6)
        $tess6
        $ravenlist.write
    }
    // ravenmind populated case
    {
        Numerical Reflection(0)
        $ravenlist.read
        Numerical Reflection(6)
        Equality Distillation
        {
            Numerical Reflection(0)
            Numerical Reflection(1)
            $ravenlist.write
        }
        {
            Numerical Reflection(0)
            $ravenlist.read
            Numerical Reflection(1)
            Additive Distillation

            Numerical Reflection(0)
            Jester's Gambit
            $ravenlist.write
        }
        Augur's Exaltation
        Hermes' Gambit
        
        Numerical Reflection(0)
        $ravenlist.read
        $ravenlist.read // list of paths

        {
            //path
            {
                Identity Reflection
                Compass' Purification
                Additive Distillation
            }
            Jester's Gambit
            Thoth's Gambit
            Particles
        }
        Jester's Gambit
        Thoth's Gambit
        Bookkeeper's Gambit(v)
        
    }
    Augur's Exaltation
    Hermes' Gambit

    //Delay
    Numerical Reflection(5)
    Delay Wisp
}

// Vec for wisp to spawn at
Mind's Reflection
Compass' Purification
Mind's Reflection
Alidade's Purification
Archer's Distillation
{ @vec(0,5,0)} >>
Additive Distillation

// Amount of media for wisp
Numerical Reflection(50)

Summon Cyclic Wisp